from aiogram.utils.keyboard import InlineKeyboardBuilder
from random import choice
from aiogram.utils.keyboard import InlineKeyboardBuilder
from product import Product
from store import store
                      



# znachkis = ['üíé' , 'üóø', 'üíµ', 'üé∞', 'ü•ö', '‚ò†Ô∏è', 'üí§']
znachkis = ['üíé']
znachkis2 = ['‚¨õÔ∏è']*7
znachkis3 = ['üü•']*5
znachkis4 =['üü©']+znachkis2+znachkis3
targets = []
for znack in znachkis:
    targets.append(znack*3)

for znack in znachkis4:
    targets.append(znack)

def get_inline_keybords():
    kb = InlineKeyboardBuilder()
    callback_data = choice(znachkis) + choice(znachkis) + choice(znachkis)

    if callback_data in targets:
        store.change_score(1)
    kb.button(text='–ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Ç üé∞',callback_data=callback_data)
    kb.button(text='–ú–∞–≥–∞–∑–∏–Ωüè¶', callback_data= '–ú–∞–≥–∞–∑–∏–Ω')
    if store.dopysk == True:
        callback_data = choice(znachkis4)
    else:
        callback_data = '–£ –≤–∞—Å –Ω–µ—Ç—É –¥–æ–ø—É—Å–∫–∞ :('

    if callback_data == '‚¨õÔ∏è':
        store.score = 0
    if callback_data == 'üü•':
        store.score = store.score + 10
    if callback_data == 'üü©':
        store.score = store.score + 100
    kb.button(text='–ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω—ã‚≠ïÔ∏è', callback_data=callback_data)
    kb.button(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüåê', callback_data='''
–ò–≥—Ä–æ–≤–æ–π –∞–≤—Ç–æ–º–∞—Ç üé∞
   –ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 3 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–º–∞–π–ª–∏–∫–∞(–Ω–∞–ø—Ä–∏–º–µ—Ä üíéüíéüíé) –ø–æ–ª—É—á–∏—Ç–µ 1‚ÇΩ
                        
–ú–∞–≥–∞–∑–∏–Ωüè¶
    –¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫—É–ø–∏—Ç—å—Å—è —Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏.
               
    –†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –Ω–∞–ø–∏—Ç–æ–∫üßâ —Å –ø–æ–º–æ—â—å—é –Ω–µ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è
    –æ—Ç —Ç—è–∂—ë–ª–æ–π —Ä–∞–±–æ—Ç—ã –∫—Ä—É—Ç–∏–ª—â–∏–∫–∞ —Å–ª–æ—Ç–æ–≤ –≤ –ù–ï–∫–∞–∑–∏–Ω–æ
              
    –î–æ–ø—É—Å–∫ –∫ –∫–æ–ª–µ—Å—É —Ñ–æ—Ä—Ç—É–Ω—ã‚≠ïÔ∏è —Ç–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ –∫–æ–ª–µ—Å–æ
    —Ñ–æ—Ä—Ç—É–Ω—ã

    –ú–æ—Ç–∏–≤–∞—Ü–∏—èüíØ —Ç–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ó–ê–ú–û–¢–ò–í–ò–†–û–í–ê–¢–¨–°–Ø –ò–ì–†–ê–¢–¨ –í 
    –ù–ï–ö–ê–ó–ò–ù–û

–ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω—ã‚≠ïÔ∏è
    –ï—Å–ª–∏ –≤–∞–º –ø–æ–ø–∞–¥—ë—Ç—Å—è  ‚¨õÔ∏è –≤–∞—à –±–∞–ª–∞–Ω—Å, –µ—Å–ª–∏ üü• +10, 
    –µ—Å–ª–∏ üü© +100.–¢–∞–∫ —á—Ç–æ –≤—ã –º–æ–∂–µ–∏–µ –∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å 
    –∏ –≤—Å—ë –ø–æ—Ç–µ—Ä—è—Ç—å''')
    kb.adjust(2,2)
    return kb.as_markup()

def get_inline_keybords1():
    kb = InlineKeyboardBuilder()
    kb.button(text='–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –Ω–∞–ø–∏—Ç–æ–∫üßâ - —Å—Ç–æ–∏—Ç 1‚ÇΩ', callback_data=Product(
        name='–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –Ω–∞–ø–∏—Ç–æ–∫',
        price=1
    ))
    kb.button(text='–î–æ–ø—É—Å–∫ –∫ –∫–æ–ª–µ—Å—É —Ñ–æ—Ä—Ç—É–Ω—ã‚≠ïÔ∏è - —Å—Ç–æ–∏—Ç 10‚ÇΩ', callback_data=Product(
        name='–î–æ–ø—É—Å–∫ –∫ –∫–æ–ª–µ—Å—É —Ñ–æ—Ä—Ç—É–Ω—ã',
        price=10
    ))
    kb.button(text='–ú–æ—Ç–∏–≤–∞—Ü–∏—èüíØ - —Å—Ç–æ–∏—Ç 5‚ÇΩ', callback_data=Product(
        name='–ú–æ—Ç–∏–≤–∞—Ü–∏—è',
        price=5
    ))
    kb.adjust(1,1,1)
    return kb.as_markup()
